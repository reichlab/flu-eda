\documentclass{article}

\begin{document}
\SweaveOpts{concordance=TRUE}

\title{Age Group Interactions in Flu Transmission}

<<Setup>>=
library(dplyr)
library(tidyr)
library(lubridate)
library(ggplot2)

library(MMWRweek)
library(cdcfluview)
@

<<LoadFluData>>=
regionflu <- get_flu_data("hhs", sub_region=1:10, data_source="ilinet", years=1997:2016)
usflu <- get_flu_data("national", sub_region=NA, data_source="ilinet", years=1997:2016)

## make AGE cols in usflu integer data type
cols <- matches('^AGE', vars=colnames(usflu))
usflu[,cols] <- sapply(usflu[,cols], as.integer)
cols <- matches('^AGE', vars=colnames(regionflu))
regionflu[,cols] <- sapply(regionflu[,cols], as.integer)

data <- bind_rows(regionflu, usflu)
data <- transmute(data,
  region_type = `REGION TYPE`,
  region = REGION,
  year = YEAR,
  week = WEEK,
  time = as.POSIXct(MMWRweek2Date(YEAR, WEEK)),
  weighted_ili = as.numeric(`% WEIGHTED ILI`),
  unweighted_ili = as.numeric(`%UNWEIGHTED ILI`),
  age_0_4 = as.integer(`AGE 0-4`),
  age_5_24 = as.integer(`AGE 5-24`),
  age_25_49 = as.integer(`AGE 25-49`),
  age_25_64 = as.integer(`AGE 25-64`),
  age_50_64 = as.integer(`AGE 50-64`),
  age_65 = as.integer(`AGE 65`),
  total_ili = as.integer(ILITOTAL),
  total_patients = as.integer(`TOTAL PATIENTS`)
)

data$season <- ifelse(
  data$week <= 30,
  paste0(data$year - 1, "/", data$year),
  paste0(data$year, "/", data$year + 1)
)

## Season week column: week number within season
## weeks after week 30 get season_week = week - 30
## weeks before week 30 get season_week = week + (number of weeks in previous year) - 30
## This computation relies on the start_date function in package MMWRweek,
## which is not exported from that package's namespace!!!
data$season_week <- ifelse(
  data$week <= 30,
  data$week + MMWRweek(MMWRweek:::start_date(data$year) - 1)$MMWRweek - 30,
  data$week - 30
)
@


<<AgeGroupsPlot, fig.keep = "all", fig=TRUE>>=
data_age_gathered <- data %>%
  gather_("age_range",
    "count",
    c("age_0_4", "age_5_24", "age_25_49", "age_25_64", "age_50_64", "age_65")) %>%
  mutate(
    proportion_ili = count / total_ili,
    proportion_patients = count / total_patients)

for(region_val in unique(data_age_gathered$region)) {
  p <- ggplot(data_age_gathered %>% filter(region == region_val)) +
    geom_line(aes(x = season_week, y = proportion_ili, colour = age_range, linetype = age_range)) +
    facet_wrap(~ season) +
    theme_bw()
  print(p)
  
  p <- ggplot(data_age_gathered %>% filter(region == region_val)) +
    geom_line(aes(x = season_week, y = proportion_patients, colour = age_range, linetype = age_range)) +
    facet_wrap(~ season) +
    theme_bw()
  print(p)
}

print(p)
@

<<AgePeakTimesBySeason, fig=TRUE>>=
peak_times_by_age_season <- data_age_gathered %>%
  group_by(age_range, season, region) %>%
  summarize(peak_week = season_week[which.max(proportion_patients)[1]])

peak_times_by_age_season_wide <- peak_times_by_age_season %>%
  ungroup() %>%
  spread(age_range, peak_week)

peak_times_by_age_season_wide %>%
  as.data.frame()
  filter(is.na(age_25_49))

seasons_25_64_grouped <- paste0(1997:2009, "/", 1998:2010)
seasons_25_64_ungrouped <- paste0(2009:2016, "/", 2010:2017)

my_line <- function(x,y,...){
    points(x,y,...)
    abline(a = 0,b = 1,...)
}

pairs(
  peak_times_by_age_season_wide %>%
    filter(season %in% seasons_25_64_grouped) %>%
    select_(.dots = c("age_0_4", "age_25_64", "age_5_24", "age_65")),
  lower.panel = my_line,
  upper.panel = my_line
)

par(mfrow = c(4, 4))
var_names <- c("age_0_4", "age_25_64", "age_5_24", "age_65")

for(i in 1:3) {
  for(j in (i + 1):4) {
    peak_time_diffs <-
      (peak_times_by_age_season_wide %>%
        filter(season %in% seasons_25_64_grouped) %>%
        select_(.dots = var_names[i]))[[1]] -
      (peak_times_by_age_season_wide %>%
        filter(season %in% seasons_25_64_grouped) %>%
        select_(.dots = var_names[j]))[[1]]
    cat(paste0("peak ", var_names[i], " - peak ", var_names[j], "\n"))
    cat(paste0("diff < 0: ", sum(peak_time_diffs < 0), "\n"))
    cat(paste0("diff == 0: ", sum(peak_time_diffs == 0), "\n"))
    cat(paste0("diff > 0: ", sum(peak_time_diffs > 0), "\n\n"))
  }
}
@



<<relative_timing_age_peaks>>=
var_names <- c("age_0_4", "age_5_24", "age_25_49", "age_50_64", "age_65")

for(i in 1:4) {
  for(j in (i + 1):5) {
    peak_time_diffs <-
      (peak_times_by_age_season_wide %>%
        filter(season %in% seasons_25_64_ungrouped) %>%
        select_(.dots = var_names[i]))[[1]] -
      (peak_times_by_age_season_wide %>%
        filter(season %in% seasons_25_64_ungrouped) %>%
        select_(.dots = var_names[j]))[[1]]
    cat(paste0(var_names[i], " vs. ", var_names[j], ":\n"))
    cat(paste0(var_names[i], " peaked before ", var_names[j], ": ", sum(peak_time_diffs < 0), "\n"))
    cat(paste0(var_names[i], " peaked same week as ", var_names[j], ": ", sum(peak_time_diffs == 0), "\n"))
    cat(paste0(var_names[i], " peaked after ", var_names[j], ": ", sum(peak_time_diffs > 0), "\n\n"))
  }
  cat("\n")
}
@

<<AgeGroupsPlot2, fig.keep = "all", fig=TRUE>>=
p <- ggplot(data_age_gathered %>% filter(season %in% seasons_25_64_ungrouped)) +
    geom_line(aes(x = season_week, y = proportion_patients, colour = age_range, linetype = age_range)) +
    facet_grid(region ~ season) +
    theme_bw()
pdf("/media/evan/data/Reich/flu-exploration/age-groups/age-groups-timeline-by-season-region.pdf", 20, 20)
print(p)
dev.off()
@


\end{document}